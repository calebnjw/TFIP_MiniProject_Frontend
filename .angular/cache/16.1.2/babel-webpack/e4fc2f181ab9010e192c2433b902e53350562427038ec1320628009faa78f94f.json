{"ast":null,"code":"import { RouterModule } from \"@angular/router\";\nimport { IndexComponent } from \"./index/index.component\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { PageNotFoundComponent } from \"./page-not-found/page-not-found.component\";\nimport { NewPostComponent } from \"./post/new-post/new-post.component\";\nimport { SinglePostComponent } from \"./post/single-post/single-post.component\";\nimport { ProfileComponent } from \"./profile/profile.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: \"\",\n  component: IndexComponent,\n  title: \"Not Threads\"\n  // no children, but uses auth service to check if user is logged in.\n  // will show regular home page if user is logged out.\n  // will show feed if user is logged in.\n}, {\n  path: \"login\",\n  title: \"Not Threads — Login\",\n  component: LoginComponent\n}, {\n  path: \"user/:user_id\",\n  component: ProfileComponent\n}, {\n  path: \"post/new\",\n  component: NewPostComponent\n}, {\n  path: \"post/:post_id\",\n  component: SinglePostComponent\n}, {\n  path: \"**\",\n  component: PageNotFoundComponent\n}];\nclass AppRoutingModule {}\nAppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n  return new (t || AppRoutingModule)();\n};\nAppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppRoutingModule\n});\nAppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [RouterModule.forRoot(routes), RouterModule]\n});\nexport { AppRoutingModule };\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","IndexComponent","LoginComponent","PageNotFoundComponent","NewPostComponent","SinglePostComponent","ProfileComponent","routes","path","component","title","AppRoutingModule","forRoot","imports","i1","exports"],"sources":["/Users/calebng/Developer/TFIP/MiniProject/frontend/src/app/app-routing.module.ts"],"sourcesContent":["import { NgModule } from \"@angular/core\";\n\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { IndexComponent } from \"./index/index.component\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { PageNotFoundComponent } from \"./page-not-found/page-not-found.component\";\nimport { NewPostComponent } from \"./post/new-post/new-post.component\";\nimport { SinglePostComponent } from \"./post/single-post/single-post.component\";\nimport { ProfileComponent } from \"./profile/profile.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: IndexComponent,\n    title: \"Not Threads\",\n    // no children, but uses auth service to check if user is logged in.\n    // will show regular home page if user is logged out.\n    // will show feed if user is logged in.\n  },\n  {\n    path: \"login\",\n    title: \"Not Threads — Login\",\n    component: LoginComponent,\n  },\n  {\n    path: \"user/:user_id\",\n    component: ProfileComponent,\n  },\n  {\n    path: \"post/new\",\n    component: NewPostComponent,\n  },\n  {\n    path: \"post/:post_id\",\n    component: SinglePostComponent,\n  },\n  {\n    path: \"**\",\n    component: PageNotFoundComponent,\n  },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n"],"mappings":"AAEA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,qBAAqB,QAAQ,2CAA2C;AACjF,SAASC,gBAAgB,QAAQ,oCAAoC;AACrE,SAASC,mBAAmB,QAAQ,0CAA0C;AAC9E,SAASC,gBAAgB,QAAQ,6BAA6B;;;AAE9D,MAAMC,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAER,cAAc;EACzBS,KAAK,EAAE;EACP;EACA;EACA;CACD,EACD;EACEF,IAAI,EAAE,OAAO;EACbE,KAAK,EAAE,qBAAqB;EAC5BD,SAAS,EAAEP;CACZ,EACD;EACEM,IAAI,EAAE,eAAe;EACrBC,SAAS,EAAEH;CACZ,EACD;EACEE,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEL;CACZ,EACD;EACEI,IAAI,EAAE,eAAe;EACrBC,SAAS,EAAEJ;CACZ,EACD;EACEG,IAAI,EAAE,IAAI;EACVC,SAAS,EAAEN;CACZ,CACF;AAED,MAKaQ,gBAAgB;AAAhBA,gBAAgB,C;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB,C;QAAhBA;AAAgB;AAAhBA,gBAAgB,C;YAHjBX,YAAY,CAACY,OAAO,CAACL,MAAM,CAAC,EAC5BP,YAAY;AAAA;SAEXW,gBAAgB;;2EAAhBA,gBAAgB;IAAAE,OAAA,GAAAC,EAAA,CAAAd,YAAA;IAAAe,OAAA,GAFjBf,YAAY;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}