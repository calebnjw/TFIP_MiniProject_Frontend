{"ast":null,"code":"import { RouterModule, TitleStrategy } from \"@angular/router\";\nimport { IndexComponent } from \"./index/index.component\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { PageNotFoundComponent } from \"./page-not-found/page-not-found.component\";\nimport { NewPostComponent } from \"./post/new-post/new-post.component\";\nimport { SinglePostComponent } from \"./post/single-post/single-post.component\";\nimport { ProfileComponent } from \"./profile/profile.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nimport * as i2 from \"@angular/router\";\nconst routes = [{\n  path: \"\",\n  component: IndexComponent,\n  title: \"Not Threads\"\n  // no children, but uses auth service to check if user is logged in.\n  // will show regular home page if user is logged out.\n  // will show feed if user is logged in.\n}, {\n  path: \"login\",\n  title: \"Not Threads — Login\",\n  component: LoginComponent\n}, {\n  path: \"user/:user_id\",\n  component: ProfileComponent\n}, {\n  path: \"post/new\",\n  component: NewPostComponent\n}, {\n  path: \"post/:post_id\",\n  component: SinglePostComponent\n}, {\n  path: \"**\",\n  title: \"Not Threads — Page Not Found\",\n  component: PageNotFoundComponent\n}];\nclass TemplatePageTitleStrategy extends TitleStrategy {\n  constructor(title) {\n    super();\n    this.title = title;\n  }\n  updateTitle(routerState) {\n    const title = this.buildTitle(routerState);\n    if (title !== undefined) {\n      this.title.setTitle(`${title}`);\n    }\n  }\n}\nTemplatePageTitleStrategy.ɵfac = function TemplatePageTitleStrategy_Factory(t) {\n  return new (t || TemplatePageTitleStrategy)(i0.ɵɵinject(i1.Title));\n};\nTemplatePageTitleStrategy.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TemplatePageTitleStrategy,\n  factory: TemplatePageTitleStrategy.ɵfac,\n  providedIn: \"root\"\n});\nexport { TemplatePageTitleStrategy };\nclass AppRoutingModule {}\nAppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n  return new (t || AppRoutingModule)();\n};\nAppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppRoutingModule\n});\nAppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [{\n    provide: TitleStrategy,\n    useClass: TemplatePageTitleStrategy\n  }],\n  imports: [RouterModule.forRoot(routes), RouterModule]\n});\nexport { AppRoutingModule };\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i2.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","TitleStrategy","IndexComponent","LoginComponent","PageNotFoundComponent","NewPostComponent","SinglePostComponent","ProfileComponent","routes","path","component","title","TemplatePageTitleStrategy","constructor","updateTitle","routerState","buildTitle","undefined","setTitle","i0","ɵɵinject","i1","Title","factory","ɵfac","providedIn","AppRoutingModule","provide","useClass","imports","forRoot","i2","exports"],"sources":["/Users/calebng/Developer/TFIP/MiniProject/frontend/src/app/app-routing.module.ts"],"sourcesContent":["import { Injectable, NgModule } from \"@angular/core\";\nimport { RouterModule, RouterStateSnapshot, Routes, TitleStrategy } from \"@angular/router\";\n\nimport { IndexComponent } from \"./index/index.component\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { PageNotFoundComponent } from \"./page-not-found/page-not-found.component\";\nimport { NewPostComponent } from \"./post/new-post/new-post.component\";\nimport { SinglePostComponent } from \"./post/single-post/single-post.component\";\nimport { ProfileComponent } from \"./profile/profile.component\";\nimport { Title } from \"@angular/platform-browser\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: IndexComponent,\n    title: \"Not Threads\",\n    // no children, but uses auth service to check if user is logged in.\n    // will show regular home page if user is logged out.\n    // will show feed if user is logged in.\n  },\n  {\n    path: \"login\",\n    title: \"Not Threads — Login\",\n    component: LoginComponent,\n  },\n  {\n    path: \"user/:user_id\",\n    component: ProfileComponent,\n  },\n  {\n    path: \"post/new\",\n    component: NewPostComponent,\n  },\n  {\n    path: \"post/:post_id\",\n    component: SinglePostComponent,\n  },\n  {\n    path: \"**\",\n    title: \"Not Threads — Page Not Found\",\n    component: PageNotFoundComponent,\n  },\n];\n\n@Injectable({ providedIn: \"root\" })\nexport class TemplatePageTitleStrategy extends TitleStrategy {\n  constructor(private readonly title: Title) {\n    super();\n  }\n\n  override updateTitle(routerState: RouterStateSnapshot) {\n    const title = this.buildTitle(routerState);\n    if (title !== undefined) {\n      this.title.setTitle(`${title}`);\n    }\n  }\n}\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [{ provide: TitleStrategy, useClass: TemplatePageTitleStrategy }],\n})\nexport class AppRoutingModule {}\n"],"mappings":"AACA,SAASA,YAAY,EAA+BC,aAAa,QAAQ,iBAAiB;AAE1F,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,qBAAqB,QAAQ,2CAA2C;AACjF,SAASC,gBAAgB,QAAQ,oCAAoC;AACrE,SAASC,mBAAmB,QAAQ,0CAA0C;AAC9E,SAASC,gBAAgB,QAAQ,6BAA6B;;;;AAG9D,MAAMC,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAER,cAAc;EACzBS,KAAK,EAAE;EACP;EACA;EACA;CACD,EACD;EACEF,IAAI,EAAE,OAAO;EACbE,KAAK,EAAE,qBAAqB;EAC5BD,SAAS,EAAEP;CACZ,EACD;EACEM,IAAI,EAAE,eAAe;EACrBC,SAAS,EAAEH;CACZ,EACD;EACEE,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEL;CACZ,EACD;EACEI,IAAI,EAAE,eAAe;EACrBC,SAAS,EAAEJ;CACZ,EACD;EACEG,IAAI,EAAE,IAAI;EACVE,KAAK,EAAE,8BAA8B;EACrCD,SAAS,EAAEN;CACZ,CACF;AAED,MACaQ,yBAA0B,SAAQX,aAAa;EAC1DY,YAA6BF,KAAY;IACvC,KAAK,EAAE;IADoB,KAAAA,KAAK,GAALA,KAAK;EAElC;EAESG,WAAWA,CAACC,WAAgC;IACnD,MAAMJ,KAAK,GAAG,IAAI,CAACK,UAAU,CAACD,WAAW,CAAC;IAC1C,IAAIJ,KAAK,KAAKM,SAAS,EAAE;MACvB,IAAI,CAACN,KAAK,CAACO,QAAQ,CAAC,GAAGP,KAAK,EAAE,CAAC;;EAEnC;;AAVWC,yBAA0B,C;mBAA1BA,yBAAyB,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,KAAA;AAAA;AAAzBV,yBAA0B,C;SAA1BA,yBAAyB;EAAAW,OAAA,EAAzBX,yBAAyB,CAAAY,IAAA;EAAAC,UAAA,EADZ;AAAM;SACnBb,yBAAyB;AAatC,MAMac,gBAAgB;AAAhBA,gBAAgB,C;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB,C;QAAhBA;AAAgB;AAAhBA,gBAAgB,C;aAFhB,CAAC;IAAEC,OAAO,EAAE1B,aAAa;IAAE2B,QAAQ,EAAEhB;EAAyB,CAAE,CAAC;EAAAiB,OAAA,GAFlE7B,YAAY,CAAC8B,OAAO,CAACtB,MAAM,CAAC,EAC5BR,YAAY;AAAA;SAGX0B,gBAAgB;;2EAAhBA,gBAAgB;IAAAG,OAAA,GAAAE,EAAA,CAAA/B,YAAA;IAAAgC,OAAA,GAHjBhC,YAAY;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}